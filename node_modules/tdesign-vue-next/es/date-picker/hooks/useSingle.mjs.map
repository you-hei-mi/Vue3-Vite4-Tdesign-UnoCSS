{"version":3,"file":"useSingle.mjs","sources":["../../../src/date-picker/hooks/useSingle.tsx"],"sourcesContent":["import { ref, computed, watch } from 'vue';\nimport { CalendarIcon as TdCalendarIcon } from 'tdesign-icons-vue-next';\nimport dayjs from 'dayjs';\nimport omit from 'lodash/omit';\n\nimport { useTNodeJSX } from '../../hooks/tnode';\nimport { useFormDisabled } from '../../form/hooks';\nimport { usePrefixClass, useConfig } from '../../hooks/useConfig';\nimport { useGlobalIcon } from '../../hooks/useGlobalIcon';\nimport { TdDatePickerProps, DateValue } from '../type';\nimport {\n  isValidDate,\n  formatDate,\n  formatTime,\n  getDefaultFormat,\n  parseToDayjs,\n} from '../../_common/js/date-picker/format';\nimport useSingleValue from './useSingleValue';\n\nexport default function useSingle(props: TdDatePickerProps) {\n  const COMPONENT_NAME = usePrefixClass('date-picker');\n  const { globalConfig } = useConfig('datePicker');\n  const { CalendarIcon } = useGlobalIcon({ CalendarIcon: TdCalendarIcon });\n  const disabled = useFormDisabled();\n  const renderTNodeJSX = useTNodeJSX();\n\n  const inputRef = ref();\n\n  const { value, onChange, time, month, year, cacheValue } = useSingleValue(props);\n\n  const formatRef = computed(() =>\n    getDefaultFormat({\n      mode: props.mode,\n      format: props.format,\n      valueType: props.valueType,\n      enableTimePicker: props.enableTimePicker,\n    }),\n  );\n\n  const popupVisible = ref(false);\n  const isHoverCell = ref(false);\n  // 未真正选中前可能不断变更输入框的内容\n  const inputValue = ref(formatDate(value.value, { format: formatRef.value.format }));\n\n  // input 设置\n  const inputProps = computed(() => ({\n    ...props.inputProps,\n    size: props.size,\n    ref: inputRef,\n    prefixIcon: () => renderTNodeJSX('prefixIcon'),\n    readonly: !props.allowInput,\n    placeholder: props.placeholder || globalConfig.value.placeholder[props.mode],\n    suffixIcon: () => {\n      return renderTNodeJSX('suffixIcon') || <CalendarIcon />;\n    },\n    class: [\n      {\n        [`${COMPONENT_NAME.value}__input--placeholder`]: isHoverCell.value,\n      },\n    ],\n    onClear: (context: { e: InputEvent }) => {\n      context?.e?.stopPropagation();\n      popupVisible.value = false;\n      onChange?.('', { dayjsValue: dayjs(), trigger: 'clear' });\n    },\n    onBlur: (val: string, context: { e: FocusEvent }) => {\n      props.onBlur?.({ value: val, e: context.e });\n    },\n    onFocus: (_: string, { e }: { e: FocusEvent }) => {\n      props.onFocus?.({ value: value.value, e });\n    },\n    onChange: (val: string) => {\n      // 输入事件\n      inputValue.value = val;\n\n      // 跳过不符合格式化的输入框内容\n      if (!isValidDate(val, formatRef.value.format)) return;\n      cacheValue.value = val;\n      const newMonth = parseToDayjs(val, formatRef.value.format).month();\n      const newYear = parseToDayjs(val, formatRef.value.format).year();\n      const newTime = formatTime(val, formatRef.value.format, formatRef.value.timeFormat, props.defaultTime);\n      !Number.isNaN(newYear) && (year.value = newYear);\n      !Number.isNaN(newMonth) && (month.value = newMonth);\n      !Number.isNaN(newTime) && (time.value = newTime);\n    },\n    onEnter: (val: string) => {\n      if (!val) {\n        onChange('', { dayjsValue: dayjs(), trigger: 'enter' });\n        popupVisible.value = false;\n        return;\n      }\n\n      if (!isValidDate(val, formatRef.value.format) && !isValidDate(value.value, formatRef.value.format)) return;\n\n      popupVisible.value = false;\n      if (isValidDate(val, formatRef.value.format)) {\n        onChange?.(\n          formatDate(val, { format: formatRef.value.format, targetFormat: formatRef.value.valueType }) as DateValue,\n          {\n            dayjsValue: parseToDayjs(val, formatRef.value.format),\n            trigger: 'enter',\n          },\n        );\n      } else if (isValidDate(value.value, formatRef.value.format)) {\n        inputValue.value = formatDate(value.value, {\n          format: formatRef.value.format,\n        });\n      } else {\n        inputValue.value = '';\n      }\n    },\n  }));\n  // popup 设置\n  const popupProps = computed(() => ({\n    expandAnimation: true,\n    ...omit(props.popupProps, 'on-visible-change'),\n    disabled: disabled.value,\n    overlayInnerStyle: props.popupProps?.overlayInnerStyle ?? { width: 'auto' },\n    overlayClassName: [props.popupProps?.overlayClassName, `${COMPONENT_NAME.value}__panel-container`],\n    onVisibleChange: (visible: boolean, context: any) => {\n      if (disabled.value) return;\n      // 这里劫持了进一步向 popup 传递的 onVisibleChange 事件，为了保证可以在 Datepicker 中使用 popupProps.onVisibleChange，故此处理\n      props.popupProps?.onVisibleChange?.(visible, context);\n      props.popupProps?.['on-visible-change']?.(visible, context);\n      // 输入框点击不关闭面板\n      if (context.trigger === 'trigger-element-click') {\n        popupVisible.value = true;\n        return;\n      }\n      popupVisible.value = visible;\n    },\n  }));\n\n  watch(value, (value) => {\n    if (!value) {\n      inputValue.value = '';\n      return;\n    }\n    if (!isValidDate(value, formatRef.value.format)) return;\n\n    inputValue.value = formatDate(value, {\n      format: formatRef.value.format,\n    });\n  });\n\n  return {\n    year,\n    month,\n    value,\n    time,\n    inputValue,\n    popupVisible,\n    inputProps,\n    popupProps,\n    inputRef,\n    cacheValue,\n    isHoverCell,\n    onChange,\n  };\n}\n"],"names":["useSingle","props","COMPONENT_NAME","usePrefixClass","_useConfig","useConfig","globalConfig","_useGlobalIcon","useGlobalIcon","CalendarIcon","TdCalendarIcon","disabled","useFormDisabled","renderTNodeJSX","useTNodeJSX","inputRef","ref","_useSingleValue","useSingleValue","value","onChange","time","month","year","cacheValue","formatRef","computed","getDefaultFormat","mode","format","valueType","enableTimePicker","popupVisible","isHoverCell","inputValue","formatDate","inputProps","_objectSpread","size","prefixIcon","readonly","allowInput","placeholder","suffixIcon","_createVNode","_defineProperty","concat","onClear","context","_context$e","e","stopPropagation","dayjsValue","dayjs","trigger","onBlur","val","_props$onBlur","call","onFocus","_","_ref2","_props$onFocus","isValidDate","newMonth","parseToDayjs","newYear","newTime","formatTime","timeFormat","defaultTime","Number","isNaN","onEnter","targetFormat","popupProps","_props$popupProps$ove","_props$popupProps","_props$popupProps2","expandAnimation","omit","overlayInnerStyle","width","overlayClassName","onVisibleChange","visible","_props$popupProps3","_props$popupProps3$on","_props$popupProps4","_props$popupProps4$on","watch"],"mappings":"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"}