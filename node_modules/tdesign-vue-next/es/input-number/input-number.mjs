/**
 * tdesign v1.9.0
 * (c) 2024 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-7deaa3b9.mjs';
import { defineComponent, createVNode, mergeProps } from 'vue';
import { AddIcon, RemoveIcon, ChevronDownIcon, ChevronUpIcon } from 'tdesign-icons-vue-next';
import { Button } from '../button/index.mjs';
import { Input } from '../input/index.mjs';
import props from './props.mjs';
import { useGlobalIcon } from '../hooks/useGlobalIcon.mjs';
import useInputNumber from './useInputNumber.mjs';
import '../hooks/index.mjs';
import { useTNodeJSX } from '../hooks/tnode.mjs';
import '../_chunks/dep-8dbc9855.mjs';
import '../button/button.mjs';
import '../_chunks/dep-b15588b0.mjs';
import '../_chunks/dep-8e411f1c.mjs';
import '../loading/index.mjs';
import '../_chunks/dep-503b7515.mjs';
import '../_chunks/dep-715774e0.mjs';
import '../_chunks/dep-cb814df4.mjs';
import '../_chunks/dep-36582a92.mjs';
import '../_chunks/dep-a2db6df1.mjs';
import '../_chunks/dep-996b4900.mjs';
import '../_chunks/dep-66473aa9.mjs';
import '../_chunks/dep-cd533155.mjs';
import '../_chunks/dep-5a5a1764.mjs';
import '../_chunks/dep-3108c312.mjs';
import '../_chunks/dep-93498383.mjs';
import '../_chunks/dep-b3734774.mjs';
import '../_chunks/dep-e5142249.mjs';
import '../_chunks/dep-c4f80cb4.mjs';
import '../_chunks/dep-0f89a1dd.mjs';
import '../_chunks/dep-2adf18a2.mjs';
import '../_chunks/dep-ab439391.mjs';
import '../_chunks/dep-60d62610.mjs';
import '../_chunks/dep-d4da440a.mjs';
import '../_chunks/dep-013382c3.mjs';
import '../_chunks/dep-ca764006.mjs';
import '../_chunks/dep-2ee9d497.mjs';
import '../_chunks/dep-a4a3ac25.mjs';
import '../_chunks/dep-6861d388.mjs';
import '../_chunks/dep-396d852b.mjs';
import '../_chunks/dep-8a3fd140.mjs';
import '../_chunks/dep-5db0da5c.mjs';
import '../_common/js/global-config/default-config.mjs';
import '../_common/js/global-config/locale/zh_CN.mjs';
import '../_chunks/dep-bf19d9ba.mjs';
import '../_chunks/dep-6963a882.mjs';
import '../_chunks/dep-31dc0415.mjs';
import '../_chunks/dep-c545db54.mjs';
import '../_chunks/dep-3f15cb30.mjs';
import '../_chunks/dep-fd2b6c64.mjs';
import '../_chunks/dep-e32ac680.mjs';
import '../_chunks/dep-1aab510a.mjs';
import '../_chunks/dep-230c1b47.mjs';
import '../_chunks/dep-cedc2818.mjs';
import '../_chunks/dep-8dae3bca.mjs';
import '../_chunks/dep-10024af3.mjs';
import '../_chunks/dep-67e59a11.mjs';
import '../_chunks/dep-41db3bc9.mjs';
import '../_chunks/dep-da57e0cf.mjs';
import '../loading/plugin.mjs';
import '../loading/loading.mjs';
import '../_chunks/dep-b089fa1f.mjs';
import '../loading/icon/gradient.mjs';
import '../_common/js/loading/circle-adapter.mjs';
import '../_common/js/utils/set-style.mjs';
import '../_common/js/utils/helper.mjs';
import '../_chunks/dep-807e1747.mjs';
import '../_chunks/dep-30b3f256.mjs';
import '../_chunks/dep-413fbf03.mjs';
import '../_chunks/dep-ac561548.mjs';
import '../_chunks/dep-0e4de31a.mjs';
import '../hooks/useConfig.mjs';
import '../config-provider/useConfig.mjs';
import '../_chunks/dep-37e3e644.mjs';
import '../config-provider/type.mjs';
import '../utils/dom.mjs';
import '../utils/easing.mjs';
import '../utils/render-tnode.mjs';
import '../_chunks/dep-60ee423b.mjs';
import '../_chunks/dep-f8909853.mjs';
import '../_chunks/dep-d00e2e04.mjs';
import '../_chunks/dep-ec2f76cc.mjs';
import '../_chunks/dep-96484611.mjs';
import '../_chunks/dep-bd7cd061.mjs';
import '../loading/props.mjs';
import '../hooks/useTeleport.mjs';
import '../utils/withInstall.mjs';
import './style/css.mjs';
import '../loading/type.mjs';
import '../button/props.mjs';
import '../hooks/useRipple.mjs';
import '../hooks/useKeepAnimation.mjs';
import '../utils/set-style.mjs';
import '../hooks/useDisabled.mjs';
import '../_chunks/dep-03dfef8f.mjs';
import '../button/type.mjs';
import '../input/input.mjs';
import '../input/props.mjs';
import '../form/hooks.mjs';
import '../input/useInput.mjs';
import '../form/const.mjs';
import '../hooks/useVModel.mjs';
import '../input/useLengthLimit.mjs';
import '../_common/js/log/index.mjs';
import '../_common/js/log/log.mjs';
import '../input/useInputEventHandler.mjs';
import '../input/useInputWidth.mjs';
import '../hooks/useResizeObserver.mjs';
import '../hooks/icon.mjs';
import '../hooks/slot.mjs';
import '../hooks/useCommonClassName.mjs';
import '../hooks/useDefaultValue.mjs';
import '../hooks/useDestroyOnClose.mjs';
import '../hooks/useVirtualScroll.mjs';
import '../hooks/useImagePreviewUrl.mjs';
import '../_common/js/upload/utils.mjs';
import '../input/input-group.mjs';
import '../input/input-group-props.mjs';
import '../input/type.mjs';
import '../_common/js/input-number/number.mjs';
import '../_common/js/input-number/large-number.mjs';

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var _InputNumber = defineComponent({
  name: "TInputNumber",
  props: props,
  setup: function setup(props2, context) {
    var renderTNodeJSX = useTNodeJSX();
    var _useGlobalIcon = useGlobalIcon({
        AddIcon: AddIcon,
        RemoveIcon: RemoveIcon,
        ChevronDownIcon: ChevronDownIcon,
        ChevronUpIcon: ChevronUpIcon
      }),
      AddIcon$1 = _useGlobalIcon.AddIcon,
      RemoveIcon$1 = _useGlobalIcon.RemoveIcon,
      ChevronDownIcon$1 = _useGlobalIcon.ChevronDownIcon,
      ChevronUpIcon$1 = _useGlobalIcon.ChevronUpIcon;
    var p = useInputNumber(props2);
    var inputRef = p.inputRef;
    context.expose(_objectSpread({}, p));
    return function () {
      var reduceIcon = props2.theme === "column" ? createVNode(ChevronDownIcon$1, {
        "size": props2.size
      }, null) : createVNode(RemoveIcon$1, {
        "size": props2.size
      }, null);
      var addIcon = props2.theme === "column" ? createVNode(ChevronUpIcon$1, {
        "size": props2.size
      }, null) : createVNode(AddIcon$1, {
        "size": props2.size
      }, null);
      var status = p.isError.value ? "error" : props2.status;
      var classPrefix = p.classPrefix.value;
      var tipsNode = renderTNodeJSX("tips");
      return createVNode("div", {
        "class": p.wrapClasses.value
      }, [props2.theme !== "normal" && createVNode(Button, {
        "class": p.reduceClasses.value,
        "disabled": p.tDisabled.value,
        "onClick": p.handleReduce,
        "variant": "outline",
        "shape": "square",
        "icon": function icon() {
          return reduceIcon;
        }
      }, null), createVNode(Input, mergeProps({
        "ref": inputRef,
        "disabled": p.tDisabled.value,
        "readonly": props2.readonly,
        "autocomplete": "off",
        "placeholder": props2.placeholder,
        "unselectable": props2.readonly ? "on" : "off",
        "autoWidth": props2.autoWidth,
        "align": props2.align || (props2.theme === "row" ? "center" : void 0),
        "status": status,
        "label": props2.label,
        "suffix": props2.suffix
      }, p.listeners, props2.inputProps, {
        "value": p.userInput.value,
        "onChange": p.onInnerInputChange
      }), context.slots), props2.theme !== "normal" && createVNode(Button, {
        "class": p.addClasses.value,
        "disabled": p.tDisabled.value,
        "onClick": p.handleAdd,
        "variant": "outline",
        "shape": "square",
        "icon": function icon() {
          return addIcon;
        }
      }, null), tipsNode && createVNode("div", {
        "class": "".concat(classPrefix, "-input__tips ").concat(classPrefix, "-tips ").concat(classPrefix, "-is-").concat(status)
      }, [tipsNode])]);
    };
  }
});

export { _InputNumber as default };
//# sourceMappingURL=input-number.mjs.map
