/**
 * tdesign v1.9.0
 * (c) 2024 tdesign
 * @license MIT
 */

import { i as isString_1 } from '../../../_chunks/dep-30b3f256.mjs';
import '../../../_chunks/dep-cb814df4.mjs';
import '../../../_chunks/dep-cd533155.mjs';
import '../../../_chunks/dep-8dbc9855.mjs';
import '../../../_chunks/dep-ab439391.mjs';
import '../../../_chunks/dep-60d62610.mjs';
import '../../../_chunks/dep-2adf18a2.mjs';

function getStopStyle(position, isVertical) {
  return isVertical ? {
    top: "calc(".concat(100 - position, "% - 1px)")
  } : {
    left: "".concat(position, "%")
  };
}
var formatSliderValue = function formatSliderValue(val, type) {
  if (type === "first") {
    if (val instanceof Array) {
      return val[0];
    }
    return val;
  }
  if (val instanceof Array) {
    return val[1];
  }
  return 0;
};
var formatLabel = function formatLabel(label, val) {
  if (Boolean(label) === false) {
    return String(val);
  }
  if (isString_1(label)) {
    var text = String(val);
    try {
      var rule = /\${value}%/g;
      var enableToReplace = rule.test(label);
      if (enableToReplace) {
        text = label.replace(/\${value}/g, String(val));
      } else {
        text = label;
        throw new Error();
      }
    } catch (e) {
      console.warn("fail to parse label prop, please pass string such as '${value}%'");
    }
    return text;
  }
  return label;
};

export { formatLabel, formatSliderValue, getStopStyle };
//# sourceMappingURL=utils.mjs.map
